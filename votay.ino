int soundSensor = 12;    // C·∫£m bi·∫øn √¢m thanh n·ªëi v·ªõi ch√¢n s·ªë 12
int relay = 2;           // Module relay n·ªëi v·ªõi ch√¢n s·ªë 2
bool relayState = false; // Tr·∫°ng th√°i relay
unsigned long lastClapTime = 0; // Th·ªùi gian v·ªó tay tr∆∞·ªõc ƒë√≥
int clapCount = 0; // S·ªë l·∫ßn v·ªó tay li√™n ti·∫øp

void setup() {
  pinMode(soundSensor, INPUT);    // C·∫£m bi·∫øn √¢m thanh l√† input
  pinMode(relay, OUTPUT);         // Relay l√† output
  digitalWrite(relay, LOW);       // Ban ƒë·∫ßu t·∫Øt relay
  Serial.begin(9600);             // B·∫Øt ƒë·∫ßu giao ti·∫øp Serial ƒë·ªÉ debug
}

void loop() {
  int sound = digitalRead(soundSensor); // ƒê·ªçc tr·∫°ng th√°i c·∫£m bi·∫øn
  unsigned long currentTime = millis();

  if (sound == HIGH) {
    if (currentTime - lastClapTime > 200 && currentTime - lastClapTime < 1000) { 
      clapCount++; // TƒÉng s·ªë l·∫ßn v·ªó tay
      Serial.println("üëè V·ªó tay l·∫ßn: " + String(clapCount));

      if (clapCount >= 2) { // N·∫øu v·ªó tay nhi·ªÅu h∆°n 2 l·∫ßn li√™n ti·∫øp trong < 1 gi√¢y
        relayState = !relayState; // ƒê·ªïi tr·∫°ng th√°i relay
        digitalWrite(relay, relayState ? HIGH : LOW);
        Serial.println(relayState ? "üí° ƒê√®n B·∫¨T!" : "üîá ƒê√®n T·∫ÆT!");
        clapCount = 0; // Reset ho√†n to√†n sau khi b·∫≠t/t·∫Øt ƒë√®n
      }
    } else {
      // N·∫øu kho·∫£ng c√°ch gi·ªØa v·ªó tay qu√° l·ªõn (>1s), reset ho√†n to√†n
      clapCount = 0;
    }

    lastClapTime = currentTime; // C·∫≠p nh·∫≠t th·ªùi gian v·ªó tay g·∫ßn nh·∫•t
    delay(50); // Tr√°nh nh·∫≠n t√≠n hi·ªáu nhi·ªÖu li√™n t·ª•c
  }
}
